@page "/btnselect"
@using System.Text
<h1>Button Select</h1>


<div class="calculator-grid">
    <div class="output">
        <div class="previous-operand">@PreviousOperand</div>
        <div class="current-operand">@CurrentOperand</div>
    </div>
    <button class="span-two" @onclick="@(() => AllClear())">AC</button>
    <button @onclick="@DeletePressed">Del</button>
    <button @onclick="@(() => SelectOperation("/"))">/</button>
    <button @onclick="@(() => UpdateHeading("1"))">1</button>
    <button @onclick="@(() => UpdateHeading("2"))">2</button>
    <button @onclick="@(() => UpdateHeading("3"))">3</button>
    <button @onclick="@(() => SelectOperation("*"))">*</button>
    <button @onclick="@(() => UpdateHeading("4"))">4</button>
    <button @onclick="@(() => UpdateHeading("5"))">5</button>
    <button @onclick="@(() => UpdateHeading("6"))">6</button>
    <button @onclick="@(() => SelectOperation("+"))">+</button>
    <button @onclick="@(() => UpdateHeading("7"))">7</button>
    <button @onclick="@(() => UpdateHeading("8"))">8</button>
    <button @onclick="@(() => UpdateHeading("9"))">9</button>
    <button @onclick="@(() => SelectOperation("-"))">-</button>
    <button @onclick="@(() => UpdateHeading("."))">.</button>
    <button @onclick="@(() => UpdateHeading("0"))">0</button>
    <button class="span-two" @onclick="@(() => UpdateHeading("1"))">=</button>
</div>

@code {
    StringBuilder CurrentOperand = new StringBuilder();
    StringBuilder PreviousOperand = new StringBuilder();
    string Operator = "";

    private void UpdateHeading(string buttonNumber)
    {
        if (!string.IsNullOrWhiteSpace(buttonNumber))
        {
            CurrentOperand.Append(buttonNumber);
        }
    }

    private void DeletePressed()
    {
        if (!string.IsNullOrWhiteSpace(CurrentOperand.ToString()))
        {
            CurrentOperand.Remove(CurrentOperand.Length - 1, 1);
        }
    }

    private void AllClear()
    {
        CurrentOperand.Clear();
        PreviousOperand.Clear();
    }

    private void SelectOperation(string NewOperator)
    {
        if (!string.IsNullOrWhiteSpace(NewOperator))
        {
            PreviousOperand.Clear();
            PreviousOperand.Append(CurrentOperand);
            PreviousOperand.Append(NewOperator);
            CurrentOperand.Clear();
            Operator = NewOperator;
        }
    }
}